package uz.coder.uzmovie.adaptersimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport androidx.viewpager2.widget.ViewPager2import com.squareup.picasso.Callbackimport com.squareup.picasso.Picassoimport uz.coder.uzmovie.databinding.ItemBindingimport uz.coder.uzmovie.databinding.ViewPagerItemBindingimport uz.coder.uzmovie.models.MovieClassimport java.lang.Exceptionclass MyAdapter2(var onItemMenuClick: OnItemMenuClick) :    ListAdapter<MovieClass, MyAdapter2.ViewH>(MyDiffUtill()) {    inner class ViewH(var binding: ItemBinding) :        RecyclerView.ViewHolder(binding.root) {        fun onBind(myClass: MovieClass) {            Picasso.get().load("https://image.tmdb.org/t/p/w500/" + myClass.poster_path).into(binding.image, object :Callback{                override fun onSuccess() {                    binding.shimmerView.visibility = View.GONE                }                override fun onError(e: Exception?) {                }            })            binding.title.text = myClass.title            binding.info.text = myClass.overview            itemView.setOnClickListener {                onItemMenuClick.onMenuClick(myClass)            }        }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyAdapter2.ViewH {        return ViewH(            ItemBinding.inflate(                LayoutInflater.from(parent.context),                parent,                false            )        )    }    override fun onBindViewHolder(holder: MyAdapter2.ViewH, position: Int) {        holder.onBind(getItem(position))    }    class MyDiffUtill : DiffUtil.ItemCallback<MovieClass>() {        override fun areItemsTheSame(oldItem: MovieClass, newItem: MovieClass): Boolean {            return oldItem == newItem        }        override fun areContentsTheSame(oldItem: MovieClass, newItem: MovieClass): Boolean {            return oldItem.equals(newItem)        }    }    public interface OnItemMenuClick {        fun onMenuClick(category: MovieClass)    }}