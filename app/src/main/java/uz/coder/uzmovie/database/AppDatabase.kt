package uz.coder.uzmovie.databaseimport android.content.Contextimport androidx.room.Databaseimport androidx.room.Roomimport androidx.room.RoomDatabaseimport androidx.room.TypeConvertersimport uz.coder.uzmovie.database.dao.DatabaseServiceimport uz.coder.uzmovie.models.MovieClass@Database(entities = [MovieClass::class], version = 1)@TypeConverters(DataConvertor::class)abstract class AppDatabase : RoomDatabase() {    abstract fun dao(): DatabaseService    companion object {        private var instens: AppDatabase? = null        @Synchronized        fun getInstants(context: Context): AppDatabase {            if (instens == null) {                instens = Room.databaseBuilder(context, AppDatabase::class.java, "room")                    .allowMainThreadQueries()                    .fallbackToDestructiveMigration().allowMainThreadQueries()                    .build()            }            return instens!!        }    }}